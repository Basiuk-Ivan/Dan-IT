// 1. Описати своїми словами у кілька рядків, навіщо у програмуванні потрібні цикли.

//Цикл - це спосіб повторити один і той же код декілька разів! Досить часто виникають ситуації, коли необхідно перевірити умову - певну кількість разів. До прикладу: запустит одий і той же код для числа від 1 до 100. Одне виконання циклу називається ітерацією. Цикли бувать: while, do...while, for. 


// 2. Опишіть у яких ситуаціях ви використовували той чи інший цикл в JS.

//Цикл while я використовував, коли потрібно було, щоб користувач ввів правильну інформацію у поле вводу. Тобто поки він не введе те що потрібно (правильне імʼя, чи вік) - його далі код не пропустить. І в даному випадку, тут повторюється одна й та ж дія( "Введіть правильне значення")
// Цикл for я використовува, коли мені потрібно було перевірити значення, яке ввів користувач - певну кількість разів. Тобто він ввів, наприклад, число 20. І нам потрібно перевірити це число 20 чи можна його поділити на 2 і якщо так, то покажи нам скільки разів це можна зробити і виведи результат в консоль. 


// 3. Що таке явне та неявне приведення (перетворення) типів даних у JS?

//Явне перетворення типів, це коли ми власноруч пишемо перед значенням в який саме тип ми хочемо його перетворити: string, number, boolean.
//Неявне перетворення типів, це коли JS самостійно це виконує, без примусового допису. До прикладу: let example = 'Ivan' + 123; Результат: Ivan123 (тип) string. Тобто якщо у нас є строка і стоїть знак плюс (+) і після строки йде число - то число стає строкою. І також не важливо, якщо після строки йдуть ще якісь значення, усі вони будуть “строкою”. І в даному випадку у нас відбувся неявний тип перетворень.


let num = prompt("Напишіть будь-яке число");

while (!num || isNaN(num)) {
   if (!num) {
      num = prompt("Напишіть будь-яке число");
   }
   if (isNaN(num)) {
      num = prompt("Ви ввели невірне число, повторіть спробу");
   }
}

while (num < 5) {
   num = prompt("Напишіть більше число");
}

for (i = 0; i <= num; i++) {
   if (i % 5 === 0) {
      console.log(i);
   }
}







